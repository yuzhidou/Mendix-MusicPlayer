// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package databaseconnector.proxies;

public class ParameterObject extends databaseconnector.proxies.Parameter
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "DatabaseConnector.ParameterObject";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SQLTypeName("SQLTypeName"),
		ParameterMode("ParameterMode"),
		Position("Position"),
		Name("Name"),
		ParameterObject_Parameter("DatabaseConnector.ParameterObject_Parameter");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ParameterObject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected ParameterObject(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject parameterObjectMendixObject)
	{
		super(context, parameterObjectMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, parameterObjectMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * @deprecated Use 'ParameterObject.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static databaseconnector.proxies.ParameterObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return databaseconnector.proxies.ParameterObject.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static databaseconnector.proxies.ParameterObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new databaseconnector.proxies.ParameterObject(context, mendixObject);
	}

	public static databaseconnector.proxies.ParameterObject load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return databaseconnector.proxies.ParameterObject.initialize(context, mendixObject);
	}

	/**
	 * @return value of SQLTypeName
	 */
	public final java.lang.String getSQLTypeName()
	{
		return getSQLTypeName(getContext());
	}

	/**
	 * @param context
	 * @return value of SQLTypeName
	 */
	public final java.lang.String getSQLTypeName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SQLTypeName.toString());
	}

	/**
	 * Set value of SQLTypeName
	 * @param sqltypename
	 */
	public final void setSQLTypeName(java.lang.String sqltypename)
	{
		setSQLTypeName(getContext(), sqltypename);
	}

	/**
	 * Set value of SQLTypeName
	 * @param context
	 * @param sqltypename
	 */
	public final void setSQLTypeName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String sqltypename)
	{
		getMendixObject().setValue(context, MemberNames.SQLTypeName.toString(), sqltypename);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of ParameterObject_Parameter
	 */
	public final java.util.List<databaseconnector.proxies.Parameter> getParameterObject_Parameter() throws com.mendix.core.CoreException
	{
		return getParameterObject_Parameter(getContext());
	}

	/**
	 * @param context
	 * @return value of ParameterObject_Parameter
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<databaseconnector.proxies.Parameter> getParameterObject_Parameter(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<databaseconnector.proxies.Parameter> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.ParameterObject_Parameter.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(databaseconnector.proxies.Parameter.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of ParameterObject_Parameter
	 * @param parameterobject_parameter
	 */
	public final void setParameterObject_Parameter(java.util.List<databaseconnector.proxies.Parameter> parameterobject_parameter)
	{
		setParameterObject_Parameter(getContext(), parameterobject_parameter);
	}

	/**
	 * Set value of ParameterObject_Parameter
	 * @param context
	 * @param parameterobject_parameter
	 */
	public final void setParameterObject_Parameter(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<databaseconnector.proxies.Parameter> parameterobject_parameter)
	{
		var identifiers = parameterobject_parameter
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.ParameterObject_Parameter.toString(), identifiers);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final databaseconnector.proxies.ParameterObject that = (databaseconnector.proxies.ParameterObject) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
